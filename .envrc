# vim: set foldmethod=marker foldmarker={{{,}}}:
#!/usr/bin/env bash
# shellcheck disable=SC1091
source "$TW_BINX/lib/sane_fn.sh"
PROJ_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export PROJ_DIR
#Green "-M- exporting PROJ_DIR: $PROJ_DIR"

############### Python ###############
# Emulate the pipenvs's activate, because we can't source things in direnv
#layout_pipenv
#layout_poetry
#layout_rye
layout_uv
#dotenv
export PYTHONPATH=$PROJ_DIR
export PIPENV_VENV_IN_PROJECT=1  # creates .venv
#export POETRY_VIRTUALENVS_IN_PROJECT=1  # creates .venv

if which tmux > /dev/null 2>&1; then
    tmux rename-window "$(basename "$PROJ_DIR")"
fi

############### Exports ###############
export RUN_ENV=local
export senv="source $PROJ_DIR/scripts/env.sh"
#export TW_FZF_ROOT="$HOME/dev"
#export SHOW_TF_PROMPT=0

############### Java ###############
#export MAVEN_PROFILE=bmw
#export JAVA_HOME="$HOME/.asdf/installs/java/openjdk-20"
#PATH_add $JAVA_HOME/bin

############### BMW ###############
#export GH_HOST=atc-github.azure.cloud.bmw
#dotenv ~/dev/s/private/sec-sops/bmw.env

export RPLC_CONFIG="$VIMWIKI_PATH/dev/vimania-uri-rs.md"
export RPLC_MIRROR_DIR="$HOME/dev/s/private/py-twlib/rplc/sysid/vimania-uri-rs"
swapin() {
    rplc -v swapin
    direnv allow
}
export_function swapin
swapout() {
    rplc -v swapout
    direnv allow
}
export_function swapout

### unset for PyPi
#unset TWINE_USERNAME
#unset TWINE_PASSWORD

# LOS {{{ #
#ln -fs $HOME/dev/lospy/static-code-analyser-configs/teams/cobra/.editorconfig .
#cp -fv $HOME/dev/lospy/static-code-analyser-configs/teams/cobra/.editorconfig .
#export GITHUB_ACTOR=q187392
#export GITHUB_TOKEN=<token_here>
#export _JAVA_OPTIONS="-Dhttp.proxyHost=127.0.0.1 -Dhttp.proxyPort=3128 -Dhttps.proxyHost=127.0.0.1 -Dhttps.proxyPort=3128 -Dhttps.nonProxyHosts=localhost|*.bmwgroup.net|*.muc -Dhttp.nonProxyHosts=localhost|*.bmwgroup.net|*.muc"
# }}} LOS #
PATH_add $PROJ_DIR/scripts
export RPLC_SWAPPED=1
