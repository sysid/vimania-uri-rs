name: Build and publish wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
        # python-version: [ "3.12" ]
        architecture: [ x86_64, arm64 ]
        # architecture: [ arm64 ]

    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install maturin

      - name: Add rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.os == 'ubuntu-latest' && 'x86_64-unknown-linux-gnu' || matrix.architecture == 'x86_64' && 'x86_64-apple-darwin' || 'aarch64-apple-darwin' }}

      - name: Build wheel
        run: maturin build --release --target ${{ matrix.os == 'ubuntu-latest' && 'x86_64-unknown-linux-gnu' || matrix.architecture == 'x86_64' && 'x86_64-apple-darwin' || 'aarch64-apple-darwin' }}

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
          #          name: wheel
          path: ./target/wheels/*.whl

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          #          pattern: *
          path: ./target/wheels
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R ./target/wheels

      - name: Install dependencies
        run: pip install twine

      - name: Upload to PyPI
        run: twine upload --skip-existing ./target/wheels/*.whl
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
